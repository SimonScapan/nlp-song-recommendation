{"version":3,"sources":["App.js","databasehandler.js","index.js"],"names":["App","useState","selectedSong","setSelectedSong","title","suggestionResults","setSuggestionResults","allSongs","Object","values","response","$","ajax","url","Database_url","dataType","type","async","success","serverResponse","console","log","error","Error","getAllSongs","Array","min","array","Math","apply","generateSuggestionDisplay","songSuggestions","songInformations","forEach","song","sentimentError","happy","angry","surprise","sad","fear","push","smallestError","inbdexOfSmallestError","indexOf","getSongSuggestions","nameKey","myArray","i","length","search","className","Autocomplete","id","options","getOptionLabel","option","style","width","renderInput","params","TextField","label","variant","onChange","e","target","innerHTML","onClick","ReactDOM","render","document","getElementById"],"mappings":"oQAwFeA,MA/Ef,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNC,EADM,KACQC,EADR,OAEqCF,mBAAS,CAACG,MAAM,KAFrD,mBAENC,EAFM,KAEaC,EAFb,KAGTC,EAAWC,OAAOC,OCNjB,WACH,IAAIC,EAkBJ,OAjBAC,IAAEC,KAAK,CACHC,IAAKC,6EACLC,SAAU,OACVC,KAAM,MACNC,OAAO,EACPC,QAAS,SAAUC,GAEfC,QAAQC,IAAIF,GACZT,EAAWS,GAEfG,MAAO,SAAUH,GAIb,MAHAC,QAAQC,IAAI,uBAAwBF,GACpCT,EAAWS,EAEL,IAAII,MAAM,wCAGjBb,EDboBc,IAC7BJ,QAAQC,IAAId,GAEZkB,MAAMC,IAAM,SAAUC,GACpB,OAAOC,KAAKF,IAAIG,MAAMD,KAAMD,IAG9B,IAmCIG,EAA4B,WAC9B,IACIC,EA7BmB,SAACC,GACxBZ,QAAQC,IAAI,sBACZD,QAAQC,IAAIW,GACZ,IAAIV,EAAQ,GAGZF,QAAQC,IAAI,2BACZd,EAAS0B,SAAQ,SAAUC,GACzBd,QAAQC,IAAI,WAKZ,IAAIc,EAAiB,EACrBA,GAAkBD,EAAKE,MAAQJ,EAAiBI,MAChDD,GAAkBD,EAAKG,MAAQL,EAAiBK,MAChDF,GAAkBD,EAAKI,SAAWN,EAAiBM,SACnDH,GAAkBD,EAAKK,IAAMP,EAAiBO,IAC9CJ,GAAkBD,EAAKM,KAAOR,EAAiBQ,KAC/ClB,EAAMmB,KAAKN,MAEb,IAAIO,EAAgBd,KAAKF,IAAIG,MAAMD,KAAMN,GACrCqB,EAAwBrB,EAAMsB,QAAQF,GAC5C,OAAOnC,EAASoC,GAMQE,CArCX,SAACC,EAASC,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAClC,GAAID,EAAQC,GAAG5C,QAAU0C,EACvB,OAAOC,EAAQC,GAiCWE,CAAOhD,EAAcK,IAEnDD,EAAqByB,GACrB5B,EAAgB,IAChBiB,QAAQC,IAAI,4BAKd,OAFAD,QAAQC,IAAIhB,GACZe,QAAQC,IAAInB,GAEV,yBAAKiD,UAAU,OACb,iDAEA,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,QAAS/C,EACTgD,eAAgB,SAACC,GAAD,OAAYA,EAAOpD,OACnCqD,MAAO,CAAEC,MAAO,KAChBC,YAAa,SAACC,GAAD,OAAY,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,MAAM,YAAYC,QAAQ,eAC1EC,SAAU,SAACC,GAAQ9D,EAAgB8D,EAAEC,OAAOC,cAE9C,4BACEC,QAAS,WAAQtC,MAChB,wBAEH,6CACA,2BAAIzB,EAAkBD,SE3E5BiE,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.bbc35e27.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport './App.css';\nimport { getAllSongs } from \"./databasehandler\"\n\n\nfunction App() {\n  const [selectedSong, setSelectedSong] = useState(\"\");\n  const [suggestionResults, setSuggestionResults] = useState({title:\"\"});\n  let allSongs = Object.values(getAllSongs());\n  console.log(allSongs)\n  \n  Array.min = function (array) {\n    return Math.min.apply(Math, array);\n  };\n\n  let search = (nameKey, myArray) => {\n    for (var i = 0; i < myArray.length; i++) {\n      if (myArray[i].title === nameKey) {\n        return myArray[i];\n      }\n    }\n  }\n  var BreakException = {};\n  let getSongSuggestions = (songInformations) => {\n    console.log(\"im getSuggestions:\")\n    console.log(songInformations)\n    let error = []\n    // index; Error\n    // {angry: 0.15, fear: 0.08, genre: 0, happy: 0, interpret: \"['Uli']\", …}\n    console.log(\"start error calculation\")\n    allSongs.forEach(function (song){\n      console.log(\"forEach\")\n      // console.log(error)\n      // console.log(song.angry)\n      // console.log(songInformations.angry)\n      \n      let sentimentError = 0\n      sentimentError += song.happy - songInformations.happy\n      sentimentError += song.angry - songInformations.angry\n      sentimentError += song.surprise - songInformations.surprise\n      sentimentError += song.sad - songInformations.sad\n      sentimentError += song.fear - songInformations.fear\n      error.push(sentimentError)\n    });\n    let smallestError = Math.min.apply(Math, error)\n    var inbdexOfSmallestError = error.indexOf(smallestError);\n  return allSongs[inbdexOfSmallestError]\n\n  }\n\n  let generateSuggestionDisplay = () => {\n    let currentSongInformations = search(selectedSong, allSongs)\n    let songSuggestions = getSongSuggestions(currentSongInformations)\n    setSuggestionResults(songSuggestions)\n    setSelectedSong(\"\")\n    console.log(\"generateSuffestion fetr\")\n  }\n\n  console.log(suggestionResults)\n  console.log(selectedSong)\n  return (\n    <div className=\"App\">\n      <h1>Songtiteleingabe:</h1>\n\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={allSongs}\n        getOptionLabel={(option) => option.title}\n        style={{ width: 300 }}\n        renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n        onChange={(e) => { setSelectedSong(e.target.innerHTML) }}\n      />\n      <button\n        onClick={() => { generateSuggestionDisplay() }}>\n        {\"Vorschlag generieren\"}\n      </button>\n      <p>Songvorschlag:</p>\n      <p>{suggestionResults.title}</p>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import $ from 'jquery';\r\n//old url\r\n//const Database_url = \"https://cocktailapp-d958.firebaseio.com/\"\r\nconst Database_url = \"https://murat-db-default-rtdb.europe-west1.firebasedatabase.app/\"\r\n\r\n\r\nexport function getAllSongs() {\r\n    let response\r\n    $.ajax({\r\n        url: Database_url + 'songs.json',\r\n        dataType: \"json\",\r\n        type: 'GET',\r\n        async: false,\r\n        success: function (serverResponse) {\r\n\r\n            console.log(serverResponse)\r\n            response = serverResponse;\r\n        },\r\n        error: function (serverResponse) {\r\n            console.log(\"Errorlog: Response: \", serverResponse);\r\n            response = serverResponse;\r\n            debugger;\r\n            throw new Error(\"Error during loading of all songs\");\r\n        }\r\n    });\r\n    return response\r\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { HashRouter, BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}