{"version":3,"sources":["App.js","databasehandler.js","index.js"],"names":["allSongs","Object","values","response","$","ajax","url","Database_url","dataType","type","async","success","serverResponse","console","log","error","Error","getAllSongs","App","useState","selectedSong","setSelectedSong","title","suggestionResults","setSuggestionResults","Array","min","array","Math","apply","generateSuggestionDisplay","songSuggestions","songInformations","forEach","song","sentimentError","abs","happy","angry","surprise","sad","fear","push","returnSongs","inbdexOfSmallestError","index","indexOf","splice","getSongSuggestions","nameKey","myArray","i","length","search","className","style","textAlign","Autocomplete","id","options","getOptionLabel","option","renderInput","params","TextField","label","variant","width","marginLeft","marginRight","onChange","e","target","innerHTML","onClick","ReactDOM","render","document","getElementById"],"mappings":"oQAQA,IAAIA,EAAWC,OAAOC,OCFf,WACH,IAAIC,EAkBJ,OAjBAC,IAAEC,KAAK,CACHC,IAAKC,6EACLC,SAAU,OACVC,KAAM,MACNC,OAAO,EACPC,QAAS,SAAUC,GAEfC,QAAQC,IAAIF,GACZT,EAAWS,GAEfG,MAAO,SAAUH,GAIb,MAHAC,QAAQC,IAAI,uBAAwBF,GACpCT,EAAWS,EAEL,IAAII,MAAM,wCAGjBb,EDjBkBc,IAoGdC,MAlGf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNC,EADM,KACQC,EADR,OAEqCF,mBAAS,CAAC,CAAEG,MAAO,IAAM,CAAEA,MAAO,IAAM,CAAEA,MAAO,MAFtF,mBAENC,EAFM,KAEaC,EAFb,KAGbX,QAAQC,IAAId,GAEZyB,MAAMC,IAAM,SAAUC,GACpB,OAAOC,KAAKF,IAAIG,MAAMD,KAAMD,IAG9B,IA+CIG,EAA4B,WAC9B,IACIC,EAzCmB,SAACC,GACxBnB,QAAQC,IAAI,sBACZD,QAAQC,IAAIkB,GACZ,IAAIjB,EAAQ,GAGZF,QAAQC,IAAI,2BAEZd,EAASiC,SAAQ,SAAUC,GAMzB,IAAIC,EAAiB,EAEjBD,EAAKZ,OAASU,EAAiBV,MACjCa,EAAiB,MAEjBA,GAAkBP,KAAKQ,IAAIF,EAAKG,MAAQL,EAAiBK,OACzDF,GAAkBP,KAAKQ,IAAIF,EAAKI,MAAQN,EAAiBM,OACzDH,GAAkBP,KAAKQ,IAAIF,EAAKK,SAAWP,EAAiBO,UAC5DJ,GAAkBP,KAAKQ,IAAIF,EAAKM,IAAMR,EAAiBQ,KACvDL,GAAkBP,KAAKQ,IAAIF,EAAKO,KAAOT,EAAiBS,OAE1D1B,EAAM2B,KAAKP,MAEbtB,QAAQC,IAAI,sBAGZ,IAFA,IAAI6B,EAAc,GACdC,EAAwB,EACnBC,EAAQ,EAAGA,EAAQ,EAAGA,IAC7BD,EAAwB7B,EAAM+B,QAAQlB,KAAKF,IAAIG,MAAMD,KAAMb,IAC3D4B,EAAYD,KAAK1C,EAAS+C,OAAOH,EAAuB,GAAG,IAG7D,OAAOD,EAMeK,CAjDX,SAACC,EAASC,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAClC,GAAID,EAAQC,GAAG7B,QAAU2B,EACvB,OAAOC,EAAQC,GA6CWE,CAAOjC,EAAcpB,IAEnDwB,EAAqBO,GACrBV,EAAgB,IAChBR,QAAQC,IAAI,4BAKd,OAFAD,QAAQC,IAAIS,GACZV,QAAQC,IAAIM,GAEV,yBAAKkC,UAAU,MAAMC,MAAO,CAACC,UAAU,WACrC,wBAAID,MAAO,CAAEC,UAAW,WAAxB,qBAEA,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,QAAS3D,EACT4D,eAAgB,SAACC,GAAD,OAAYA,EAAOvC,OACnCwC,YAAa,SAACC,GAAD,OAAY,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,MAAM,YAAYC,QAAQ,eAC1EX,MAAO,CACLY,MAAO,IACPC,WAAY,OACZC,YAAa,QAEfC,SAAU,SAACC,GAAQlD,EAAgBkD,EAAEC,OAAOC,cAE9C,4BACEC,QAAS,WAAQ5C,KACjByB,MAAO,CAAEa,WAAY,OACrBC,YAAa,SACZ,wBAEH,uBAAGd,MAAO,CAAEC,UAAW,WAAvB,kBACA,uBAAGD,MAAO,CAAEC,UAAW,WAAajC,EAAkB,GAAGD,OACzD,uBAAGiC,MAAO,CAAEC,UAAW,WAAajC,EAAkB,GAAGD,OACzD,uBAAGiC,MAAO,CAAEC,UAAW,WAAajC,EAAkB,GAAGD,SEjG/DqD,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.41eb363f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport './App.css';\nimport { getAllSongs } from \"./databasehandler\"\n\nlet allSongs = Object.values(getAllSongs());\n\nfunction App() {\n  const [selectedSong, setSelectedSong] = useState(\"\");\n  const [suggestionResults, setSuggestionResults] = useState([{ title: \"\" }, { title: \"\" }, { title: \"\" }]);\n  console.log(allSongs)\n\n  Array.min = function (array) {\n    return Math.min.apply(Math, array);\n  };\n\n  let search = (nameKey, myArray) => {\n    for (var i = 0; i < myArray.length; i++) {\n      if (myArray[i].title === nameKey) {\n        return myArray[i];\n      }\n    }\n  }\n  var BreakException = {};\n  let getSongSuggestions = (songInformations) => {\n    console.log(\"im getSuggestions:\")\n    console.log(songInformations)\n    let error = []\n    // index; Error\n    // {angry: 0.15, fear: 0.08, genre: 0, happy: 0, interpret: \"['Uli']\", …}\n    console.log(\"start error calculation\")\n    \n    allSongs.forEach(function (song) {\n      // console.log(error)\n      // console.log(song.angry)\n      // console.log(songInformations.angry)\n\n\n      let sentimentError = 0\n\n      if (song.title == songInformations.title) {\n        sentimentError = 100000000000\n      } else {\n        sentimentError += Math.abs(song.happy - songInformations.happy)\n        sentimentError += Math.abs(song.angry - songInformations.angry)\n        sentimentError += Math.abs(song.surprise - songInformations.surprise)\n        sentimentError += Math.abs(song.sad - songInformations.sad)\n        sentimentError += Math.abs(song.fear - songInformations.fear)\n      }\n      error.push(sentimentError)\n    });\n    console.log(\"Recommn fenidstiso\")\n    let returnSongs = []\n    let inbdexOfSmallestError = 0\n    for (let index = 0; index < 3; index++) {\n      inbdexOfSmallestError = error.indexOf(Math.min.apply(Math, error));\n      returnSongs.push(allSongs.splice(inbdexOfSmallestError, 1)[0])\n    }\n\n    return returnSongs\n\n  }\n\n  let generateSuggestionDisplay = () => {\n    let currentSongInformations = search(selectedSong, allSongs)\n    let songSuggestions = getSongSuggestions(currentSongInformations)\n    setSuggestionResults(songSuggestions)\n    setSelectedSong(\"\")\n    console.log(\"generateSuffestion fetr\")\n  }\n\n  console.log(suggestionResults)\n  console.log(selectedSong)\n  return (\n    <div className=\"App\" style={{textAlign:\"center\"}}>\n      <h1 style={{ textAlign: \"center\" }}>Songtiteleingabe:</h1>\n\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={allSongs}\n        getOptionLabel={(option) => option.title}\n        renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n        style={{\n          width: 300,\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n         }}\n        onChange={(e) => { setSelectedSong(e.target.innerHTML) }}\n      />\n      <button\n        onClick={() => { generateSuggestionDisplay() }}\n        style={{ marginLeft: \"auto\",\n        marginRight: \"auto\" }}>\n        {\"Vorschlag generieren\"}\n      </button>\n      <p style={{ textAlign: \"center\" }}>Songvorschlag:</p>\n      <p style={{ textAlign: \"center\" }}>{suggestionResults[0].title}</p>\n      <p style={{ textAlign: \"center\" }}>{suggestionResults[1].title}</p>\n      <p style={{ textAlign: \"center\" }}>{suggestionResults[2].title}</p>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import $ from 'jquery';\r\n//old url\r\n//const Database_url = \"https://cocktailapp-d958.firebaseio.com/\"\r\nconst Database_url = \"https://murat-db-default-rtdb.europe-west1.firebasedatabase.app/\"\r\n\r\n\r\nexport function getAllSongs() {\r\n    let response\r\n    $.ajax({\r\n        url: Database_url + 'songs.json',\r\n        dataType: \"json\",\r\n        type: 'GET',\r\n        async: false,\r\n        success: function (serverResponse) {\r\n\r\n            console.log(serverResponse)\r\n            response = serverResponse;\r\n        },\r\n        error: function (serverResponse) {\r\n            console.log(\"Errorlog: Response: \", serverResponse);\r\n            response = serverResponse;\r\n            debugger;\r\n            throw new Error(\"Error during loading of all songs\");\r\n        }\r\n    });\r\n    return response\r\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}